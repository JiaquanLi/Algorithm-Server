// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: route_guide.proto

#include "route_guide.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace routeguide {
class RouteNoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteNote>
      _instance;
} _RouteNote_default_instance_;
class TempletFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TempletFileRequest>
      _instance;
} _TempletFileRequest_default_instance_;
class TempletFileReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TempletFileReply>
      _instance;
} _TempletFileReply_default_instance_;
class IcpMaxIterationsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IcpMaxIterationsRequest>
      _instance;
} _IcpMaxIterationsRequest_default_instance_;
class IcpMaxIterationsReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IcpMaxIterationsReply>
      _instance;
} _IcpMaxIterationsReply_default_instance_;
class IcpFilterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IcpFilterRequest>
      _instance;
} _IcpFilterRequest_default_instance_;
class IcpFilterReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IcpFilterReply>
      _instance;
} _IcpFilterReply_default_instance_;
class ServerInfoReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfoReply>
      _instance;
} _ServerInfoReply_default_instance_;
class ServerInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfoRequest>
      _instance;
} _ServerInfoRequest_default_instance_;
class LisenceInfoReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LisenceInfoReply>
      _instance;
} _LisenceInfoReply_default_instance_;
class LisenceInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LisenceInfoRequest>
      _instance;
} _LisenceInfoRequest_default_instance_;
}  // namespace routeguide
namespace protobuf_route_5fguide_2eproto {
static void InitDefaultsRouteNote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_RouteNote_default_instance_;
    new (ptr) ::routeguide::RouteNote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::RouteNote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RouteNote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRouteNote}, {}};

static void InitDefaultsTempletFileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_TempletFileRequest_default_instance_;
    new (ptr) ::routeguide::TempletFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::TempletFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TempletFileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTempletFileRequest}, {}};

static void InitDefaultsTempletFileReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_TempletFileReply_default_instance_;
    new (ptr) ::routeguide::TempletFileReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::TempletFileReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TempletFileReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTempletFileReply}, {}};

static void InitDefaultsIcpMaxIterationsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_IcpMaxIterationsRequest_default_instance_;
    new (ptr) ::routeguide::IcpMaxIterationsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::IcpMaxIterationsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IcpMaxIterationsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIcpMaxIterationsRequest}, {}};

static void InitDefaultsIcpMaxIterationsReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_IcpMaxIterationsReply_default_instance_;
    new (ptr) ::routeguide::IcpMaxIterationsReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::IcpMaxIterationsReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IcpMaxIterationsReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIcpMaxIterationsReply}, {}};

static void InitDefaultsIcpFilterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_IcpFilterRequest_default_instance_;
    new (ptr) ::routeguide::IcpFilterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::IcpFilterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IcpFilterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIcpFilterRequest}, {}};

static void InitDefaultsIcpFilterReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_IcpFilterReply_default_instance_;
    new (ptr) ::routeguide::IcpFilterReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::IcpFilterReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IcpFilterReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIcpFilterReply}, {}};

static void InitDefaultsServerInfoReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_ServerInfoReply_default_instance_;
    new (ptr) ::routeguide::ServerInfoReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::ServerInfoReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfoReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerInfoReply}, {}};

static void InitDefaultsServerInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_ServerInfoRequest_default_instance_;
    new (ptr) ::routeguide::ServerInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::ServerInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerInfoRequest}, {}};

static void InitDefaultsLisenceInfoReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_LisenceInfoReply_default_instance_;
    new (ptr) ::routeguide::LisenceInfoReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::LisenceInfoReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LisenceInfoReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLisenceInfoReply}, {}};

static void InitDefaultsLisenceInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::routeguide::_LisenceInfoRequest_default_instance_;
    new (ptr) ::routeguide::LisenceInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::routeguide::LisenceInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LisenceInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLisenceInfoRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RouteNote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TempletFileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TempletFileReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IcpMaxIterationsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IcpMaxIterationsReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IcpFilterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IcpFilterReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerInfoReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LisenceInfoReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LisenceInfoRequest.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::RouteNote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::RouteNote, datasend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::RouteNote, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::TempletFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::TempletFileRequest, datasend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::TempletFileRequest, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::TempletFileReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::TempletFileReply, retsts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::IcpMaxIterationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::IcpMaxIterationsRequest, maxiterations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::IcpMaxIterationsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::IcpMaxIterationsReply, retsts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::IcpFilterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::IcpFilterRequest, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::IcpFilterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::IcpFilterReply, retsts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::ServerInfoReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::ServerInfoReply, revsion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::ServerInfoReply, builddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::ServerInfoReply, complayname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::ServerInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::ServerInfoRequest, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::LisenceInfoReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::LisenceInfoReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::LisenceInfoReply, statues_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::LisenceInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::routeguide::LisenceInfoRequest, clientlicense_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::routeguide::RouteNote)},
  { 7, -1, sizeof(::routeguide::TempletFileRequest)},
  { 14, -1, sizeof(::routeguide::TempletFileReply)},
  { 20, -1, sizeof(::routeguide::IcpMaxIterationsRequest)},
  { 26, -1, sizeof(::routeguide::IcpMaxIterationsReply)},
  { 32, -1, sizeof(::routeguide::IcpFilterRequest)},
  { 38, -1, sizeof(::routeguide::IcpFilterReply)},
  { 44, -1, sizeof(::routeguide::ServerInfoReply)},
  { 52, -1, sizeof(::routeguide::ServerInfoRequest)},
  { 58, -1, sizeof(::routeguide::LisenceInfoReply)},
  { 65, -1, sizeof(::routeguide::LisenceInfoRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_RouteNote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_TempletFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_TempletFileReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_IcpMaxIterationsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_IcpMaxIterationsReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_IcpFilterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_IcpFilterReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_ServerInfoReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_ServerInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_LisenceInfoReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::routeguide::_LisenceInfoRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "route_guide.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021route_guide.proto\022\nrouteguide\"+\n\tRoute"
      "Note\022\020\n\010datasend\030\001 \001(\014\022\014\n\004size\030\002 \001(\005\"4\n\022"
      "TempletFileRequest\022\020\n\010datasend\030\001 \001(\014\022\014\n\004"
      "size\030\002 \001(\005\"\"\n\020TempletFileReply\022\016\n\006retsts"
      "\030\001 \001(\010\"0\n\027IcpMaxIterationsRequest\022\025\n\rmax"
      "iterations\030\001 \001(\005\"\'\n\025IcpMaxIterationsRepl"
      "y\022\016\n\006retsts\030\001 \001(\010\"\"\n\020IcpFilterRequest\022\016\n"
      "\006filter\030\001 \001(\002\" \n\016IcpFilterReply\022\016\n\006retst"
      "s\030\001 \001(\010\"J\n\017ServerInfoReply\022\017\n\007revsion\030\001 "
      "\001(\t\022\021\n\tbuilddate\030\002 \001(\t\022\023\n\013complayname\030\003 "
      "\001(\t\"$\n\021ServerInfoRequest\022\017\n\007message\030\001 \001("
      "\t\"4\n\020LisenceInfoReply\022\017\n\007message\030\001 \001(\t\022\017"
      "\n\007statues\030\002 \001(\010\"+\n\022LisenceInfoRequest\022\025\n"
      "\rclientLicense\030\001 \001(\t2\352\003\n\nRouteGuide\022\?\n\tR"
      "outeChat\022\025.routeguide.RouteNote\032\025.routeg"
      "uide.RouteNote\"\000(\0010\001\022Q\n\rSetIcpTemplet\022\036."
      "routeguide.TempletFileRequest\032\034.routegui"
      "de.TempletFileReply\"\000(\001\022_\n\023SetIcpMaxIter"
      "ations\022#.routeguide.IcpMaxIterationsRequ"
      "est\032!.routeguide.IcpMaxIterationsReply\"\000"
      "\022J\n\014SetIcpFilter\022\034.routeguide.IcpFilterR"
      "equest\032\032.routeguide.IcpFilterReply\"\000\022K\n\013"
      "CheckServer\022\035.routeguide.ServerInfoReque"
      "st\032\033.routeguide.ServerInfoReply\"\000\022N\n\014Che"
      "ckLisence\022\036.routeguide.LisenceInfoReques"
      "t\032\034.routeguide.LisenceInfoReply\"\000B6\n\033io."
      "grpc.examples.routeguideB\017RouteGuideProt"
      "oP\001\242\002\003RTGb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1097);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "route_guide.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_route_5fguide_2eproto
namespace routeguide {

// ===================================================================

void RouteNote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouteNote::kDatasendFieldNumber;
const int RouteNote::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouteNote::RouteNote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_RouteNote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.RouteNote)
}
RouteNote::RouteNote(const RouteNote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datasend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datasend().size() > 0) {
    datasend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datasend_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:routeguide.RouteNote)
}

void RouteNote::SharedCtor() {
  datasend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

RouteNote::~RouteNote() {
  // @@protoc_insertion_point(destructor:routeguide.RouteNote)
  SharedDtor();
}

void RouteNote::SharedDtor() {
  datasend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RouteNote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RouteNote::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RouteNote& RouteNote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_RouteNote.base);
  return *internal_default_instance();
}


void RouteNote::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.RouteNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  _internal_metadata_.Clear();
}

bool RouteNote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.RouteNote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes datasend = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datasend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.RouteNote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.RouteNote)
  return false;
#undef DO_
}

void RouteNote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.RouteNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes datasend = 1;
  if (this->datasend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->datasend(), output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.RouteNote)
}

::google::protobuf::uint8* RouteNote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.RouteNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes datasend = 1;
  if (this->datasend().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->datasend(), target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.RouteNote)
  return target;
}

size_t RouteNote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.RouteNote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes datasend = 1;
  if (this->datasend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datasend());
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RouteNote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.RouteNote)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteNote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RouteNote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.RouteNote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.RouteNote)
    MergeFrom(*source);
  }
}

void RouteNote::MergeFrom(const RouteNote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.RouteNote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasend().size() > 0) {

    datasend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datasend_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void RouteNote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.RouteNote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteNote::CopyFrom(const RouteNote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.RouteNote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteNote::IsInitialized() const {
  return true;
}

void RouteNote::Swap(RouteNote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouteNote::InternalSwap(RouteNote* other) {
  using std::swap;
  datasend_.Swap(&other->datasend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RouteNote::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TempletFileRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TempletFileRequest::kDatasendFieldNumber;
const int TempletFileRequest::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TempletFileRequest::TempletFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_TempletFileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.TempletFileRequest)
}
TempletFileRequest::TempletFileRequest(const TempletFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datasend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datasend().size() > 0) {
    datasend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datasend_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:routeguide.TempletFileRequest)
}

void TempletFileRequest::SharedCtor() {
  datasend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

TempletFileRequest::~TempletFileRequest() {
  // @@protoc_insertion_point(destructor:routeguide.TempletFileRequest)
  SharedDtor();
}

void TempletFileRequest::SharedDtor() {
  datasend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TempletFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TempletFileRequest::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TempletFileRequest& TempletFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_TempletFileRequest.base);
  return *internal_default_instance();
}


void TempletFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.TempletFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  _internal_metadata_.Clear();
}

bool TempletFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.TempletFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes datasend = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datasend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.TempletFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.TempletFileRequest)
  return false;
#undef DO_
}

void TempletFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.TempletFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes datasend = 1;
  if (this->datasend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->datasend(), output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.TempletFileRequest)
}

::google::protobuf::uint8* TempletFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.TempletFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes datasend = 1;
  if (this->datasend().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->datasend(), target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.TempletFileRequest)
  return target;
}

size_t TempletFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.TempletFileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes datasend = 1;
  if (this->datasend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datasend());
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TempletFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.TempletFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TempletFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TempletFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.TempletFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.TempletFileRequest)
    MergeFrom(*source);
  }
}

void TempletFileRequest::MergeFrom(const TempletFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.TempletFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasend().size() > 0) {

    datasend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datasend_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void TempletFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.TempletFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TempletFileRequest::CopyFrom(const TempletFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.TempletFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TempletFileRequest::IsInitialized() const {
  return true;
}

void TempletFileRequest::Swap(TempletFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TempletFileRequest::InternalSwap(TempletFileRequest* other) {
  using std::swap;
  datasend_.Swap(&other->datasend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TempletFileRequest::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TempletFileReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TempletFileReply::kRetstsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TempletFileReply::TempletFileReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_TempletFileReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.TempletFileReply)
}
TempletFileReply::TempletFileReply(const TempletFileReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retsts_ = from.retsts_;
  // @@protoc_insertion_point(copy_constructor:routeguide.TempletFileReply)
}

void TempletFileReply::SharedCtor() {
  retsts_ = false;
}

TempletFileReply::~TempletFileReply() {
  // @@protoc_insertion_point(destructor:routeguide.TempletFileReply)
  SharedDtor();
}

void TempletFileReply::SharedDtor() {
}

void TempletFileReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TempletFileReply::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TempletFileReply& TempletFileReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_TempletFileReply.base);
  return *internal_default_instance();
}


void TempletFileReply::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.TempletFileReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retsts_ = false;
  _internal_metadata_.Clear();
}

bool TempletFileReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.TempletFileReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool retsts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &retsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.TempletFileReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.TempletFileReply)
  return false;
#undef DO_
}

void TempletFileReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.TempletFileReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool retsts = 1;
  if (this->retsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->retsts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.TempletFileReply)
}

::google::protobuf::uint8* TempletFileReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.TempletFileReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool retsts = 1;
  if (this->retsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->retsts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.TempletFileReply)
  return target;
}

size_t TempletFileReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.TempletFileReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool retsts = 1;
  if (this->retsts() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TempletFileReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.TempletFileReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TempletFileReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TempletFileReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.TempletFileReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.TempletFileReply)
    MergeFrom(*source);
  }
}

void TempletFileReply::MergeFrom(const TempletFileReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.TempletFileReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retsts() != 0) {
    set_retsts(from.retsts());
  }
}

void TempletFileReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.TempletFileReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TempletFileReply::CopyFrom(const TempletFileReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.TempletFileReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TempletFileReply::IsInitialized() const {
  return true;
}

void TempletFileReply::Swap(TempletFileReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TempletFileReply::InternalSwap(TempletFileReply* other) {
  using std::swap;
  swap(retsts_, other->retsts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TempletFileReply::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IcpMaxIterationsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IcpMaxIterationsRequest::kMaxiterationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IcpMaxIterationsRequest::IcpMaxIterationsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_IcpMaxIterationsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.IcpMaxIterationsRequest)
}
IcpMaxIterationsRequest::IcpMaxIterationsRequest(const IcpMaxIterationsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  maxiterations_ = from.maxiterations_;
  // @@protoc_insertion_point(copy_constructor:routeguide.IcpMaxIterationsRequest)
}

void IcpMaxIterationsRequest::SharedCtor() {
  maxiterations_ = 0;
}

IcpMaxIterationsRequest::~IcpMaxIterationsRequest() {
  // @@protoc_insertion_point(destructor:routeguide.IcpMaxIterationsRequest)
  SharedDtor();
}

void IcpMaxIterationsRequest::SharedDtor() {
}

void IcpMaxIterationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IcpMaxIterationsRequest::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IcpMaxIterationsRequest& IcpMaxIterationsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_IcpMaxIterationsRequest.base);
  return *internal_default_instance();
}


void IcpMaxIterationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.IcpMaxIterationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maxiterations_ = 0;
  _internal_metadata_.Clear();
}

bool IcpMaxIterationsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.IcpMaxIterationsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 maxiterations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxiterations_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.IcpMaxIterationsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.IcpMaxIterationsRequest)
  return false;
#undef DO_
}

void IcpMaxIterationsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.IcpMaxIterationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 maxiterations = 1;
  if (this->maxiterations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->maxiterations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.IcpMaxIterationsRequest)
}

::google::protobuf::uint8* IcpMaxIterationsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.IcpMaxIterationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 maxiterations = 1;
  if (this->maxiterations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->maxiterations(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.IcpMaxIterationsRequest)
  return target;
}

size_t IcpMaxIterationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.IcpMaxIterationsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 maxiterations = 1;
  if (this->maxiterations() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxiterations());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IcpMaxIterationsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.IcpMaxIterationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IcpMaxIterationsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IcpMaxIterationsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.IcpMaxIterationsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.IcpMaxIterationsRequest)
    MergeFrom(*source);
  }
}

void IcpMaxIterationsRequest::MergeFrom(const IcpMaxIterationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.IcpMaxIterationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maxiterations() != 0) {
    set_maxiterations(from.maxiterations());
  }
}

void IcpMaxIterationsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.IcpMaxIterationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IcpMaxIterationsRequest::CopyFrom(const IcpMaxIterationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.IcpMaxIterationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IcpMaxIterationsRequest::IsInitialized() const {
  return true;
}

void IcpMaxIterationsRequest::Swap(IcpMaxIterationsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IcpMaxIterationsRequest::InternalSwap(IcpMaxIterationsRequest* other) {
  using std::swap;
  swap(maxiterations_, other->maxiterations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IcpMaxIterationsRequest::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IcpMaxIterationsReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IcpMaxIterationsReply::kRetstsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IcpMaxIterationsReply::IcpMaxIterationsReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_IcpMaxIterationsReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.IcpMaxIterationsReply)
}
IcpMaxIterationsReply::IcpMaxIterationsReply(const IcpMaxIterationsReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retsts_ = from.retsts_;
  // @@protoc_insertion_point(copy_constructor:routeguide.IcpMaxIterationsReply)
}

void IcpMaxIterationsReply::SharedCtor() {
  retsts_ = false;
}

IcpMaxIterationsReply::~IcpMaxIterationsReply() {
  // @@protoc_insertion_point(destructor:routeguide.IcpMaxIterationsReply)
  SharedDtor();
}

void IcpMaxIterationsReply::SharedDtor() {
}

void IcpMaxIterationsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IcpMaxIterationsReply::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IcpMaxIterationsReply& IcpMaxIterationsReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_IcpMaxIterationsReply.base);
  return *internal_default_instance();
}


void IcpMaxIterationsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.IcpMaxIterationsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retsts_ = false;
  _internal_metadata_.Clear();
}

bool IcpMaxIterationsReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.IcpMaxIterationsReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool retsts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &retsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.IcpMaxIterationsReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.IcpMaxIterationsReply)
  return false;
#undef DO_
}

void IcpMaxIterationsReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.IcpMaxIterationsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool retsts = 1;
  if (this->retsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->retsts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.IcpMaxIterationsReply)
}

::google::protobuf::uint8* IcpMaxIterationsReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.IcpMaxIterationsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool retsts = 1;
  if (this->retsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->retsts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.IcpMaxIterationsReply)
  return target;
}

size_t IcpMaxIterationsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.IcpMaxIterationsReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool retsts = 1;
  if (this->retsts() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IcpMaxIterationsReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.IcpMaxIterationsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const IcpMaxIterationsReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IcpMaxIterationsReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.IcpMaxIterationsReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.IcpMaxIterationsReply)
    MergeFrom(*source);
  }
}

void IcpMaxIterationsReply::MergeFrom(const IcpMaxIterationsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.IcpMaxIterationsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retsts() != 0) {
    set_retsts(from.retsts());
  }
}

void IcpMaxIterationsReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.IcpMaxIterationsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IcpMaxIterationsReply::CopyFrom(const IcpMaxIterationsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.IcpMaxIterationsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IcpMaxIterationsReply::IsInitialized() const {
  return true;
}

void IcpMaxIterationsReply::Swap(IcpMaxIterationsReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IcpMaxIterationsReply::InternalSwap(IcpMaxIterationsReply* other) {
  using std::swap;
  swap(retsts_, other->retsts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IcpMaxIterationsReply::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IcpFilterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IcpFilterRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IcpFilterRequest::IcpFilterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_IcpFilterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.IcpFilterRequest)
}
IcpFilterRequest::IcpFilterRequest(const IcpFilterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_ = from.filter_;
  // @@protoc_insertion_point(copy_constructor:routeguide.IcpFilterRequest)
}

void IcpFilterRequest::SharedCtor() {
  filter_ = 0;
}

IcpFilterRequest::~IcpFilterRequest() {
  // @@protoc_insertion_point(destructor:routeguide.IcpFilterRequest)
  SharedDtor();
}

void IcpFilterRequest::SharedDtor() {
}

void IcpFilterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IcpFilterRequest::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IcpFilterRequest& IcpFilterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_IcpFilterRequest.base);
  return *internal_default_instance();
}


void IcpFilterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.IcpFilterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_ = 0;
  _internal_metadata_.Clear();
}

bool IcpFilterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.IcpFilterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &filter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.IcpFilterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.IcpFilterRequest)
  return false;
#undef DO_
}

void IcpFilterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.IcpFilterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float filter = 1;
  if (this->filter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->filter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.IcpFilterRequest)
}

::google::protobuf::uint8* IcpFilterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.IcpFilterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float filter = 1;
  if (this->filter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->filter(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.IcpFilterRequest)
  return target;
}

size_t IcpFilterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.IcpFilterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float filter = 1;
  if (this->filter() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IcpFilterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.IcpFilterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IcpFilterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IcpFilterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.IcpFilterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.IcpFilterRequest)
    MergeFrom(*source);
  }
}

void IcpFilterRequest::MergeFrom(const IcpFilterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.IcpFilterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter() != 0) {
    set_filter(from.filter());
  }
}

void IcpFilterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.IcpFilterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IcpFilterRequest::CopyFrom(const IcpFilterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.IcpFilterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IcpFilterRequest::IsInitialized() const {
  return true;
}

void IcpFilterRequest::Swap(IcpFilterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IcpFilterRequest::InternalSwap(IcpFilterRequest* other) {
  using std::swap;
  swap(filter_, other->filter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IcpFilterRequest::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IcpFilterReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IcpFilterReply::kRetstsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IcpFilterReply::IcpFilterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_IcpFilterReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.IcpFilterReply)
}
IcpFilterReply::IcpFilterReply(const IcpFilterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retsts_ = from.retsts_;
  // @@protoc_insertion_point(copy_constructor:routeguide.IcpFilterReply)
}

void IcpFilterReply::SharedCtor() {
  retsts_ = false;
}

IcpFilterReply::~IcpFilterReply() {
  // @@protoc_insertion_point(destructor:routeguide.IcpFilterReply)
  SharedDtor();
}

void IcpFilterReply::SharedDtor() {
}

void IcpFilterReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IcpFilterReply::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IcpFilterReply& IcpFilterReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_IcpFilterReply.base);
  return *internal_default_instance();
}


void IcpFilterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.IcpFilterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retsts_ = false;
  _internal_metadata_.Clear();
}

bool IcpFilterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.IcpFilterReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool retsts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &retsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.IcpFilterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.IcpFilterReply)
  return false;
#undef DO_
}

void IcpFilterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.IcpFilterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool retsts = 1;
  if (this->retsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->retsts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.IcpFilterReply)
}

::google::protobuf::uint8* IcpFilterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.IcpFilterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool retsts = 1;
  if (this->retsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->retsts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.IcpFilterReply)
  return target;
}

size_t IcpFilterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.IcpFilterReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool retsts = 1;
  if (this->retsts() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IcpFilterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.IcpFilterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const IcpFilterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IcpFilterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.IcpFilterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.IcpFilterReply)
    MergeFrom(*source);
  }
}

void IcpFilterReply::MergeFrom(const IcpFilterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.IcpFilterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retsts() != 0) {
    set_retsts(from.retsts());
  }
}

void IcpFilterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.IcpFilterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IcpFilterReply::CopyFrom(const IcpFilterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.IcpFilterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IcpFilterReply::IsInitialized() const {
  return true;
}

void IcpFilterReply::Swap(IcpFilterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IcpFilterReply::InternalSwap(IcpFilterReply* other) {
  using std::swap;
  swap(retsts_, other->retsts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IcpFilterReply::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerInfoReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfoReply::kRevsionFieldNumber;
const int ServerInfoReply::kBuilddateFieldNumber;
const int ServerInfoReply::kComplaynameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfoReply::ServerInfoReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_ServerInfoReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.ServerInfoReply)
}
ServerInfoReply::ServerInfoReply(const ServerInfoReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  revsion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.revsion().size() > 0) {
    revsion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revsion_);
  }
  builddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.builddate().size() > 0) {
    builddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.builddate_);
  }
  complayname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.complayname().size() > 0) {
    complayname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.complayname_);
  }
  // @@protoc_insertion_point(copy_constructor:routeguide.ServerInfoReply)
}

void ServerInfoReply::SharedCtor() {
  revsion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  builddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  complayname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerInfoReply::~ServerInfoReply() {
  // @@protoc_insertion_point(destructor:routeguide.ServerInfoReply)
  SharedDtor();
}

void ServerInfoReply::SharedDtor() {
  revsion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  builddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  complayname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfoReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerInfoReply::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfoReply& ServerInfoReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_ServerInfoReply.base);
  return *internal_default_instance();
}


void ServerInfoReply::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.ServerInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  revsion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  builddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  complayname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ServerInfoReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.ServerInfoReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string revsion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revsion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->revsion().data(), static_cast<int>(this->revsion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "routeguide.ServerInfoReply.revsion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string builddate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_builddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->builddate().data(), static_cast<int>(this->builddate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "routeguide.ServerInfoReply.builddate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string complayname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_complayname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->complayname().data(), static_cast<int>(this->complayname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "routeguide.ServerInfoReply.complayname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.ServerInfoReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.ServerInfoReply)
  return false;
#undef DO_
}

void ServerInfoReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.ServerInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string revsion = 1;
  if (this->revsion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revsion().data(), static_cast<int>(this->revsion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.ServerInfoReply.revsion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->revsion(), output);
  }

  // string builddate = 2;
  if (this->builddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->builddate().data(), static_cast<int>(this->builddate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.ServerInfoReply.builddate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->builddate(), output);
  }

  // string complayname = 3;
  if (this->complayname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->complayname().data(), static_cast<int>(this->complayname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.ServerInfoReply.complayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->complayname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.ServerInfoReply)
}

::google::protobuf::uint8* ServerInfoReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.ServerInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string revsion = 1;
  if (this->revsion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revsion().data(), static_cast<int>(this->revsion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.ServerInfoReply.revsion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->revsion(), target);
  }

  // string builddate = 2;
  if (this->builddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->builddate().data(), static_cast<int>(this->builddate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.ServerInfoReply.builddate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->builddate(), target);
  }

  // string complayname = 3;
  if (this->complayname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->complayname().data(), static_cast<int>(this->complayname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.ServerInfoReply.complayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->complayname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.ServerInfoReply)
  return target;
}

size_t ServerInfoReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.ServerInfoReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string revsion = 1;
  if (this->revsion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->revsion());
  }

  // string builddate = 2;
  if (this->builddate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->builddate());
  }

  // string complayname = 3;
  if (this->complayname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->complayname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerInfoReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.ServerInfoReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfoReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfoReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.ServerInfoReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.ServerInfoReply)
    MergeFrom(*source);
  }
}

void ServerInfoReply::MergeFrom(const ServerInfoReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.ServerInfoReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.revsion().size() > 0) {

    revsion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revsion_);
  }
  if (from.builddate().size() > 0) {

    builddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.builddate_);
  }
  if (from.complayname().size() > 0) {

    complayname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.complayname_);
  }
}

void ServerInfoReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.ServerInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfoReply::CopyFrom(const ServerInfoReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.ServerInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfoReply::IsInitialized() const {
  return true;
}

void ServerInfoReply::Swap(ServerInfoReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfoReply::InternalSwap(ServerInfoReply* other) {
  using std::swap;
  revsion_.Swap(&other->revsion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  builddate_.Swap(&other->builddate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  complayname_.Swap(&other->complayname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerInfoReply::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfoRequest::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfoRequest::ServerInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_ServerInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.ServerInfoRequest)
}
ServerInfoRequest::ServerInfoRequest(const ServerInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:routeguide.ServerInfoRequest)
}

void ServerInfoRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerInfoRequest::~ServerInfoRequest() {
  // @@protoc_insertion_point(destructor:routeguide.ServerInfoRequest)
  SharedDtor();
}

void ServerInfoRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerInfoRequest::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfoRequest& ServerInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_ServerInfoRequest.base);
  return *internal_default_instance();
}


void ServerInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.ServerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ServerInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.ServerInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "routeguide.ServerInfoRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.ServerInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.ServerInfoRequest)
  return false;
#undef DO_
}

void ServerInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.ServerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.ServerInfoRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.ServerInfoRequest)
}

::google::protobuf::uint8* ServerInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.ServerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.ServerInfoRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.ServerInfoRequest)
  return target;
}

size_t ServerInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.ServerInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.ServerInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.ServerInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.ServerInfoRequest)
    MergeFrom(*source);
  }
}

void ServerInfoRequest::MergeFrom(const ServerInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.ServerInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void ServerInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.ServerInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfoRequest::CopyFrom(const ServerInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.ServerInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfoRequest::IsInitialized() const {
  return true;
}

void ServerInfoRequest::Swap(ServerInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfoRequest::InternalSwap(ServerInfoRequest* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerInfoRequest::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LisenceInfoReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LisenceInfoReply::kMessageFieldNumber;
const int LisenceInfoReply::kStatuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LisenceInfoReply::LisenceInfoReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_LisenceInfoReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.LisenceInfoReply)
}
LisenceInfoReply::LisenceInfoReply(const LisenceInfoReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  statues_ = from.statues_;
  // @@protoc_insertion_point(copy_constructor:routeguide.LisenceInfoReply)
}

void LisenceInfoReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statues_ = false;
}

LisenceInfoReply::~LisenceInfoReply() {
  // @@protoc_insertion_point(destructor:routeguide.LisenceInfoReply)
  SharedDtor();
}

void LisenceInfoReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LisenceInfoReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LisenceInfoReply::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LisenceInfoReply& LisenceInfoReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_LisenceInfoReply.base);
  return *internal_default_instance();
}


void LisenceInfoReply::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.LisenceInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statues_ = false;
  _internal_metadata_.Clear();
}

bool LisenceInfoReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.LisenceInfoReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "routeguide.LisenceInfoReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool statues = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &statues_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.LisenceInfoReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.LisenceInfoReply)
  return false;
#undef DO_
}

void LisenceInfoReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.LisenceInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.LisenceInfoReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // bool statues = 2;
  if (this->statues() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->statues(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.LisenceInfoReply)
}

::google::protobuf::uint8* LisenceInfoReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.LisenceInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.LisenceInfoReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // bool statues = 2;
  if (this->statues() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->statues(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.LisenceInfoReply)
  return target;
}

size_t LisenceInfoReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.LisenceInfoReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool statues = 2;
  if (this->statues() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LisenceInfoReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.LisenceInfoReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LisenceInfoReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LisenceInfoReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.LisenceInfoReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.LisenceInfoReply)
    MergeFrom(*source);
  }
}

void LisenceInfoReply::MergeFrom(const LisenceInfoReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.LisenceInfoReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.statues() != 0) {
    set_statues(from.statues());
  }
}

void LisenceInfoReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.LisenceInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LisenceInfoReply::CopyFrom(const LisenceInfoReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.LisenceInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LisenceInfoReply::IsInitialized() const {
  return true;
}

void LisenceInfoReply::Swap(LisenceInfoReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LisenceInfoReply::InternalSwap(LisenceInfoReply* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(statues_, other->statues_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LisenceInfoReply::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LisenceInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LisenceInfoRequest::kClientLicenseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LisenceInfoRequest::LisenceInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_route_5fguide_2eproto::scc_info_LisenceInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:routeguide.LisenceInfoRequest)
}
LisenceInfoRequest::LisenceInfoRequest(const LisenceInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientlicense_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientlicense().size() > 0) {
    clientlicense_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientlicense_);
  }
  // @@protoc_insertion_point(copy_constructor:routeguide.LisenceInfoRequest)
}

void LisenceInfoRequest::SharedCtor() {
  clientlicense_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LisenceInfoRequest::~LisenceInfoRequest() {
  // @@protoc_insertion_point(destructor:routeguide.LisenceInfoRequest)
  SharedDtor();
}

void LisenceInfoRequest::SharedDtor() {
  clientlicense_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LisenceInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LisenceInfoRequest::descriptor() {
  ::protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LisenceInfoRequest& LisenceInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_route_5fguide_2eproto::scc_info_LisenceInfoRequest.base);
  return *internal_default_instance();
}


void LisenceInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:routeguide.LisenceInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientlicense_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LisenceInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:routeguide.LisenceInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string clientLicense = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientlicense()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientlicense().data(), static_cast<int>(this->clientlicense().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "routeguide.LisenceInfoRequest.clientLicense"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:routeguide.LisenceInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:routeguide.LisenceInfoRequest)
  return false;
#undef DO_
}

void LisenceInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:routeguide.LisenceInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string clientLicense = 1;
  if (this->clientlicense().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientlicense().data(), static_cast<int>(this->clientlicense().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.LisenceInfoRequest.clientLicense");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clientlicense(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:routeguide.LisenceInfoRequest)
}

::google::protobuf::uint8* LisenceInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:routeguide.LisenceInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string clientLicense = 1;
  if (this->clientlicense().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientlicense().data(), static_cast<int>(this->clientlicense().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "routeguide.LisenceInfoRequest.clientLicense");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clientlicense(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:routeguide.LisenceInfoRequest)
  return target;
}

size_t LisenceInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:routeguide.LisenceInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string clientLicense = 1;
  if (this->clientlicense().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientlicense());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LisenceInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:routeguide.LisenceInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LisenceInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LisenceInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:routeguide.LisenceInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:routeguide.LisenceInfoRequest)
    MergeFrom(*source);
  }
}

void LisenceInfoRequest::MergeFrom(const LisenceInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:routeguide.LisenceInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientlicense().size() > 0) {

    clientlicense_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientlicense_);
  }
}

void LisenceInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:routeguide.LisenceInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LisenceInfoRequest::CopyFrom(const LisenceInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:routeguide.LisenceInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LisenceInfoRequest::IsInitialized() const {
  return true;
}

void LisenceInfoRequest::Swap(LisenceInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LisenceInfoRequest::InternalSwap(LisenceInfoRequest* other) {
  using std::swap;
  clientlicense_.Swap(&other->clientlicense_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LisenceInfoRequest::GetMetadata() const {
  protobuf_route_5fguide_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_route_5fguide_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace routeguide
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::RouteNote* Arena::CreateMaybeMessage< ::routeguide::RouteNote >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::RouteNote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::TempletFileRequest* Arena::CreateMaybeMessage< ::routeguide::TempletFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::TempletFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::TempletFileReply* Arena::CreateMaybeMessage< ::routeguide::TempletFileReply >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::TempletFileReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::IcpMaxIterationsRequest* Arena::CreateMaybeMessage< ::routeguide::IcpMaxIterationsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::IcpMaxIterationsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::IcpMaxIterationsReply* Arena::CreateMaybeMessage< ::routeguide::IcpMaxIterationsReply >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::IcpMaxIterationsReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::IcpFilterRequest* Arena::CreateMaybeMessage< ::routeguide::IcpFilterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::IcpFilterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::IcpFilterReply* Arena::CreateMaybeMessage< ::routeguide::IcpFilterReply >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::IcpFilterReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::ServerInfoReply* Arena::CreateMaybeMessage< ::routeguide::ServerInfoReply >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::ServerInfoReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::ServerInfoRequest* Arena::CreateMaybeMessage< ::routeguide::ServerInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::ServerInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::LisenceInfoReply* Arena::CreateMaybeMessage< ::routeguide::LisenceInfoReply >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::LisenceInfoReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::routeguide::LisenceInfoRequest* Arena::CreateMaybeMessage< ::routeguide::LisenceInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::routeguide::LisenceInfoRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
